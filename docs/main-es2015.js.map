{"version":3,"sources":["./src/app/helpers/transformer.ts","./src/app/components/parser/parser.component.html","./src/app/components/lexer/lexer.component.ts","./src/app/components/parser/parser.component.ts","./src/app/components/lexer/lexer.component.html","./src/app/containers/compiler/compiler.component.html","./src/app/helpers/index.ts","./src/app/components/generator/generator.component.ts","./src/environments/environment.ts","./src/app/helpers/helpers.ts","./src/app/containers/compiler/compiler.component.ts","./src/app/app.component.ts","./src/app/components/generator/generator.component.html","./src/app/components/lexer/lexer.component.scss","./src/app/app.component.html","./src/app/app.module.ts","./src/app/helpers/parser.ts","./src/app/helpers/tokenizer.ts","./src/app/helpers/generator.ts","./src/app/components/transformer/transformer.component.html","./src/app/components/transformer/transformer.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Ast, AstNode } from \"../models\";\n\nexport function transformer(ast: Ast, visitor: any) {\n  if (ast.type === \"url\") {\n    ast.body = ast.body.map((node: AstNode) => {\n      const visitorFunc = visitor[node.type];\n      if (typeof visitorFunc === \"function\") {\n        return visitorFunc(node);\n      } else {\n        return node;\n      }\n    });\n  }\n  return ast;\n}\n","export default \"<p-organizationChart [value]=\\\"ast\\\" styleClass=\\\"company\\\">\\n  <ng-template let-node pTemplate=\\\"default\\\">\\n    <div class=\\\"ast-node\\\" [ngClass]=\\\"{ modified: node.modified }\\\" #astNode>\\n      <div *ngIf=\\\"!node.value\\\">\\n        <div class=\\\"ast-node__parent\\\">{{ node.label }}</div>\\n      </div>\\n      <div *ngIf=\\\"node.value\\\">\\n        <div class=\\\"ast-node__label\\\">{{ node.label }}</div>\\n        <div class=\\\"ast-node__value\\\">{{ node.value }}</div>\\n      </div>\\n    </div>\\n  </ng-template>\\n</p-organizationChart>\\n\";","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnInit,\n  QueryList,\n  Renderer2,\n  ViewChild,\n  ViewChildren,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from \"@angular/core\";\nimport { TimelineLite, TweenMax } from \"gsap\";\nimport { tokenizer } from \"../../helpers\";\n\n@Component({\n  selector: \"url-lexer\",\n  templateUrl: \"./lexer.component.html\",\n  styleUrls: [\"./lexer.component.scss\"],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class LexerComponent implements OnInit, AfterViewInit {\n  @Input() url!: string;\n  tokens: any;\n  tokenArray = [];\n  scannerPos = 0;\n  scannedTokens = [];\n  @ViewChild(\"lexer\", { static: false }) lexerElem!: ElementRef<any>;\n  @ViewChildren(\"tokenElem\") tokenElems!: QueryList<ElementRef>;\n\n  constructor(private vcRef: ViewContainerRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (this.url) {\n      this.tokens = tokenizer(this.url);\n    }\n  }\n\n  scan() {\n    const tokens: any = document.querySelectorAll(\".tokenText\");\n    const scanner: any = document.querySelector(\".scanner\");\n    const tl = new TimelineLite();\n\n    tokens.forEach((token: Element) => {\n      const rect = token.getBoundingClientRect();\n\n      tl.fromTo(\n        scanner,\n        0.1,\n        { left: this.scannerPos, opacity: 1 },\n        { left: this.scannerPos + rect.width }\n      );\n\n      this.scannerPos += rect.width;\n      const cln = <Element>token.cloneNode(true);\n      cln.classList.add(\"clone\");\n      tl.to(cln, 1, { opacity: 1 });\n      this.renderer.appendChild(this.lexerElem.nativeElement, cln);\n    });\n    tl.to(scanner, 0.1, { opacity: 0 });\n  }\n\n  tween(): void {\n    const btnArr: Element[] = this.tokenArray.map(\n      (btn: ElementRef<any>) => btn.nativeElement\n    );\n    console.log(btnArr);\n\n    const coord = this.lexerElem.nativeElement.getBoundingClientRect();\n    let x = 0;\n    TweenMax.staggerFromTo(\n      btnArr,\n      1,\n      {\n        x: coord.x,\n        y: -100,\n        opacity: 0,\n      },\n      {\n        y: 0,\n        x: (index: number, target: any) => {\n          const currentX = x;\n          x += target.getBoundingClientRect().width + 10;\n          return currentX;\n        },\n        opacity: 1,\n      },\n      0.2\n    );\n  }\n\n  ngAfterViewInit() {\n    // this.tokenArray = this.tokenElems.toArray();\n    this.tween();\n    this.scan();\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnInit,\n  QueryList,\n  ViewChildren,\n  ViewEncapsulation,\n} from \"@angular/core\";\nimport { TimelineLite } from \"gsap\";\nimport { mapAstToChart } from \"src/app/helpers\";\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: \"url-parser\",\n  templateUrl: \"./parser.component.html\",\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ParserComponent implements OnInit, AfterViewInit {\n  @Input() ast: any;\n  @Input() label!: string;\n  @ViewChildren(\"astNode\") astNodes!: QueryList<ElementRef>;\n\n  constructor(private cdRef: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    this.ast = [mapAstToChart(this.ast)];\n  }\n\n  ngAfterViewInit() {\n    this.parse();\n  }\n\n  parse() {\n    const nodes: any = document.querySelectorAll(\".p-organizationchart-table\");\n    const tl = new TimelineLite();\n\n    tl.staggerFromTo(\n      nodes,\n      1,\n      {\n        opacity: 0,\n      },\n      {\n        opacity: 1,\n      },\n      0.4\n    );\n  }\n\n  transform() {\n    const astNodes = document.querySelectorAll(\".ast-node\");\n    const tl = new TimelineLite();\n\n    astNodes.forEach((astNode) => {\n      tl.to(astNode, 0.1, {\n        boxShadow: \"0px 0px 16px 10px rgba(179,25,179,1)\",\n      }).to(astNode, 0.5, {\n        boxShadow: \"none\",\n      });\n    });\n    this.cdRef.detectChanges();\n  }\n}\n","export default \"<div class=\\\"url ml-3 d-flex justify-content-center\\\">\\n  <div class=\\\"position-relative\\\" #parent>\\n    <span\\n      class=\\\"tokenText {{ token.type }}\\\"\\n      *ngFor=\\\"let token of tokens; let i = index\\\"\\n    >\\n      {{ token.value }}\\n    </span>\\n    <div class=\\\"scanner\\\" #scanner></div>\\n  </div>\\n</div>\\n<h3 class=\\\"d-flex justify-content-center\\\">Tokens</h3>\\n<div class=\\\"lexer\\\" #lexer></div>\\n\";","export default \"<div class=\\\"page-title m-3\\\">SIMPLE://URL.COMPILER</div>\\n<div class=\\\"row m-3\\\">\\n  <div class=\\\"col-6\\\">\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"font-weight-bold text-uppercase\\\">Url</label>\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"url\\\" [(ngModel)]=\\\"url\\\" />\\n    </div>\\n    <div>\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"mx-2 btn btn-outline-primary\\\"\\n        (click)=\\\"setState(CompilerState.TOKENIZE)\\\"\\n      >\\n        Tokenize\\n      </button>\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"mx-2 btn btn-outline-success\\\"\\n        (click)=\\\"setState(CompilerState.PARSE)\\\"\\n      >\\n        Parse\\n      </button>\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"mx-2 btn btn-outline-danger\\\"\\n        (click)=\\\"setState(CompilerState.TRANSFORM)\\\"\\n      >\\n        Transform\\n      </button>\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"mx-2 btn btn-outline-secondary\\\"\\n        (click)=\\\"setState(CompilerState.GENERATE)\\\"\\n      >\\n        Generate\\n      </button>\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"mx-2 btn btn-outline-info\\\"\\n        (click)=\\\"setState(CompilerState.RESET)\\\"\\n      >\\n        Reset\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\\\"col-6\\\">\\n    <span class=\\\"font-weight-bold text-uppercase\\\">Visitor</span>\\n    <ngx-codemirror\\n      [(ngModel)]=\\\"visitor\\\"\\n      [options]=\\\"{\\n        lineNumbers: true,\\n        mode: 'javascript',\\n        theme: 'material'\\n      }\\\"\\n    ></ngx-codemirror>\\n  </div>\\n</div>\\n\\n<!-- <pre style=\\\"color:aliceblue\\\">{{modifiedAst | json}}</pre> -->\\n<ng-container [ngSwitch]=\\\"true\\\">\\n  <ng-container *ngSwitchCase=\\\"currentState === CompilerState.TOKENIZE\\\">\\n    <url-lexer [url]=\\\"url\\\"></url-lexer>\\n  </ng-container>\\n  <ng-container *ngSwitchCase=\\\"currentState === CompilerState.PARSE\\\">\\n    <url-parser [ast]=\\\"ast\\\" label=\\\"Parser\\\"></url-parser>\\n  </ng-container>\\n  <ng-container *ngSwitchCase=\\\"currentState === CompilerState.TRANSFORM\\\">\\n    <url-transformer\\n      [ast]=\\\"ast\\\"\\n      [modifiedAst]=\\\"modifiedAst\\\"\\n      [visitor]=\\\"visitorObj\\\"\\n      label=\\\"Transformer\\\"\\n      (transform)=\\\"onTransform($event)\\\"\\n    ></url-transformer>\\n  </ng-container>\\n  <ng-container *ngSwitchCase=\\\"currentState === CompilerState.GENERATE\\\">\\n    <url-generator [url]=\\\"finalUrl\\\"></url-generator>\\n  </ng-container>\\n</ng-container>\\n\";","import { AstNode, Chart } from \"../models\";\n\nexport { generator } from \"./generator\";\nexport { parser } from \"./parser\";\nexport { tokenizer } from \"./tokenizer\";\nexport { transformer } from \"./transformer\";\n\nexport function mapAstToChart(ast: AstNode): Chart {\n  const { type, body } = ast;\n  return {\n    label: type,\n    expanded: true,\n    children: body.map((child: AstNode) => {\n      if (!child?.body) {\n        return {\n          label: child.type,\n          value: child.value,\n          ...(child.modified ? { modified: true } : null),\n        };\n      }\n      const arr = [];\n      for (const key in child.body) {\n        if (child.body.hasOwnProperty(key) && key !== \"modified\") {\n          arr.push({\n            label: key,\n            value: child.body[key],\n            expanded: true,\n            ...(child.body.modified ? { modified: true } : null),\n          });\n        }\n      }\n      return {\n        label: child.type,\n        children: arr,\n        expanded: true,\n        ...(child.body.modified ? { modified: true } : null),\n      };\n    }),\n  };\n}\n","import { AfterViewInit, Component, Input } from \"@angular/core\";\nimport { TimelineMax } from \"gsap\";\n\n@Component({\n  selector: \"url-generator\",\n  templateUrl: \"./generator.component.html\",\n})\nexport class GeneratorComponent implements AfterViewInit {\n  @Input() url!: string;\n  constructor() {}\n\n  ngAfterViewInit() {\n    const tl = new TimelineMax({ repeat: 0 });\n    const line = <Element>document.querySelector(\".line\");\n    const upper = <Element>document.querySelector(\".upper\");\n    const lower = <Element>document.querySelector(\".lower\");\n    tl.from(line, 0.5, { scaleX: 0, transformOrigin: \"right center\" });\n    tl.from(upper, 0.75, { y: 40 }, \"text\");\n    tl.from(lower, 0.75, { y: -40 }, \"text\");\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { AstNode } from \"../models\";\n\nexport const COLON = \":\";\nexport const SLASH = \"/\";\nexport const QUERY = \"?\";\nexport const EQUAL = \"=\";\nexport const AMPERSAND = \"&\";\nexport const HASH = \"#\";\n\nexport function isDelimiter(token?: AstNode) {\n  return token?.type === \"delimiter\";\n}\n\nexport function isSlash(token?: AstNode) {\n  return isDelimiter(token) && token?.value === SLASH;\n}\n\nexport function isColon(token?: AstNode) {\n  return isDelimiter(token) && token?.value === COLON;\n}\n\nexport function isHash(token?: AstNode) {\n  return isDelimiter(token) && token?.value === HASH;\n}\n\nexport function isQuery(token?: AstNode) {\n  return isDelimiter(token) && token?.value === QUERY;\n}\n\nexport function isAmpersand(token?: AstNode) {\n  return isDelimiter(token) && token?.value === AMPERSAND;\n}\n\nexport function isEqual(token?: AstNode) {\n  return isDelimiter(token) && token?.value === EQUAL;\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Ast, AstNode } from \"src/app/models\";\nimport { generator, parser, tokenizer, transformer } from \"../../helpers\";\n\nexport enum CompilerState {\n  IDLE = \"IDLE\",\n  TOKENIZE = \"TOKENIZE\",\n  PARSE = \"PARSE\",\n  TRANSFORM = \"TRANSFORM\",\n  GENERATE = \"GENERATE\",\n  RESET = \"RESET\",\n}\n\n@Component({\n  selector: \"url-compiler\",\n  templateUrl: \"./compiler.component.html\",\n})\nexport class CompilerComponent implements OnInit {\n  url = \"https://video.google.in:80/videoplay?lang=en#00h02m30s\";\n  CompilerState = CompilerState;\n  currentState = CompilerState.IDLE;\n  tokens!: AstNode[];\n  startCompile = false;\n  ast!: Ast;\n  modifiedAst!: Ast;\n  visitorObj: any;\n  finalUrl!: string;\n  visitor = `{\n  QueryParamater(node) {\n    if ((node.body.name === \"lang\") && (node.body.value === \"en\")) {\n      node.body.value = \"NL\";\n      node.body.modified = true;\n    }\n    return node;\n  }\n}`;\n\n  ngOnInit() {\n    this.compileUrl();\n  }\n\n  onTransform(modifiedAst: any) {\n    this.ast = modifiedAst;\n  }\n\n  compileUrl() {\n    this.tokens = tokenizer(this.url);\n    this.ast = parser(this.tokens);\n    // tslint:disable-next-line:prefer-const\n    let visitorObj;\n    // tslint:disable-next-line:no-eval\n    eval(`visitorObj = ${this.visitor}`); // Using eval on purpose\n    this.visitorObj = visitorObj;\n    this.modifiedAst = JSON.parse(JSON.stringify(this.ast));\n    this.modifiedAst = transformer(this.modifiedAst, this.visitorObj);\n    this.finalUrl = generator(this.modifiedAst);\n  }\n\n  setState(state: CompilerState) {\n    this.compileUrl();\n    this.currentState = state;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/mode/markdown/markdown\";\n\n@Component({\n  selector: \"url-root\",\n  templateUrl: \"./app.component.html\",\n})\nexport class AppComponent {\n  title = \"url-compiler\";\n}\n","export default \"<div class=\\\"final-url\\\">\\n  <div class=\\\"upperWrap\\\">\\n    <div class=\\\"upper\\\">The modified url is</div>\\n  </div>\\n  <div class=\\\"line\\\"></div>\\n  <div class=\\\"lowerWrap\\\">\\n    <div class=\\\"lower\\\">{{ url }}</div>\\n  </div>\\n</div>\\n\";","export default \".lexer,\\n.parser {\\n  min-width: 100px;\\n  max-width: 250px;\\n  min-height: 250px;\\n  border: 2px dashed var(--lexer-bg-color);\\n  margin: auto;\\n  justify-content: center;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  margin-bottom: 50px;\\n}\\n\\n.animate {\\n  transform: translate(calc(50vw - 50px), -50px);\\n  top: 20px;\\n}\\n\\n.token-container {\\n  display: flex;\\n  height: 60px;\\n}\\n\\n.token-container .token {\\n  border-radius: 10px;\\n  padding: 5px 10px;\\n  margin: 5px;\\n  position: absolute;\\n  text-align: center;\\n}\\n\\n.tokenText {\\n  position: relative;\\n  white-space: nowrap;\\n  font-size: 2.5rem;\\n}\\n\\n.scanner {\\n  display: inline-block;\\n  border: 5px dotted var(--lexer-bg-color);\\n  height: 3.75rem;\\n  width: 1.85rem;\\n  position: absolute;\\n  left: 0px;\\n  margin-left: -5px;\\n}\\n\\n.url {\\n  position: relative;\\n}\\n\\n.clone {\\n  display: block;\\n  width: 100%;\\n  border-bottom: 2px dashed var(--lexer-bg-color);\\n  padding: 8px;\\n  text-align: center;\\n  font-size: 16px;\\n  opacity: 0;\\n  font-weight: bold;\\n}\\n\\n.tokenText.identifier.clone::before {\\n  content: \\\"I\\\";\\n  position: absolute;\\n  left: -12px;\\n}\\n\\n.tokenText.delimiter.clone::before {\\n  content: \\\"D\\\";\\n  position: absolute;\\n  left: -15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xleGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUVFLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLHdDQUFBO0VBQ0EsWUFBQTtFQUNBLHVCQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7RUFDQSxtQkFBQTtBQUNGOztBQUVBO0VBQ0UsOENBQUE7RUFDQSxTQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0VBQ0EsWUFBQTtBQUNGOztBQUNFO0VBQ0UsbUJBQUE7RUFDQSxpQkFBQTtFQUNBLFdBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0FBQ0o7O0FBR0E7RUFDRSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0EsaUJBQUE7QUFBRjs7QUFHQTtFQUNFLHFCQUFBO0VBQ0Esd0NBQUE7RUFDQSxlQUFBO0VBQ0EsY0FBQTtFQUNBLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLGlCQUFBO0FBQUY7O0FBR0E7RUFDRSxrQkFBQTtBQUFGOztBQUdBO0VBQ0UsY0FBQTtFQUNBLFdBQUE7RUFDQSwrQ0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxVQUFBO0VBQ0EsaUJBQUE7QUFBRjs7QUFHQTtFQUNFLFlBQUE7RUFDQSxrQkFBQTtFQUNBLFdBQUE7QUFBRjs7QUFHQTtFQUNFLFlBQUE7RUFDQSxrQkFBQTtFQUNBLFdBQUE7QUFBRiIsImZpbGUiOiJsZXhlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5sZXhlcixcbi5wYXJzZXIge1xuICBtaW4td2lkdGg6IDEwMHB4O1xuICBtYXgtd2lkdGg6IDI1MHB4O1xuICBtaW4taGVpZ2h0OiAyNTBweDtcbiAgYm9yZGVyOiAycHggZGFzaGVkIHZhcigtLWxleGVyLWJnLWNvbG9yKTtcbiAgbWFyZ2luOiBhdXRvO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTogNTBweDtcbn1cblxuLmFuaW1hdGUge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZShjYWxjKDUwdncgLSA1MHB4KSwgLTUwcHgpO1xuICB0b3A6IDIwcHg7XG59XG5cbi50b2tlbi1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBoZWlnaHQ6IDYwcHg7XG5cbiAgLnRva2VuIHtcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgIHBhZGRpbmc6IDVweCAxMHB4O1xuICAgIG1hcmdpbjogNXB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbn1cblxuLnRva2VuVGV4dCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgZm9udC1zaXplOiAyLjVyZW07XG59XG5cbi5zY2FubmVyIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBib3JkZXI6IDVweCBkb3R0ZWQgdmFyKC0tbGV4ZXItYmctY29sb3IpO1xuICBoZWlnaHQ6IDMuNzVyZW07XG4gIHdpZHRoOiAxLjg1cmVtO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDBweDtcbiAgbWFyZ2luLWxlZnQ6IC01cHg7XG59XG5cbi51cmwge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5jbG9uZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyLWJvdHRvbTogMnB4IGRhc2hlZCB2YXIoLS1sZXhlci1iZy1jb2xvcik7XG4gIHBhZGRpbmc6IDhweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDE2cHg7XG4gIG9wYWNpdHk6IDA7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4udG9rZW5UZXh0LmlkZW50aWZpZXIuY2xvbmU6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiSVwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IC0xMnB4O1xufVxuXG4udG9rZW5UZXh0LmRlbGltaXRlci5jbG9uZTo6YmVmb3JlIHtcbiAgY29udGVudDogXCJEXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogLTE1cHg7XG59XG4iXX0= */\";","export default \"<url-compiler></url-compiler>\\n\";","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NoopAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { NgModule } from \"@angular/core\";\nimport { GoogleChartsModule } from \"angular-google-charts\";\nimport { OrganizationChartModule } from \"primeng/organizationchart\";\nimport { CodemirrorModule } from \"@ctrl/ngx-codemirror\";\n\nimport { AppComponent } from \"./app.component\";\nimport { CompilerComponent } from \"./containers/compiler/compiler.component\";\nimport { LexerComponent } from \"./components/lexer/lexer.component\";\nimport { ParserComponent } from \"./components/parser/parser.component\";\nimport { FormsModule } from \"@angular/forms\";\nimport { TransformerComponent } from \"./components/transformer/transformer.component\";\nimport { GeneratorComponent } from \"./components/generator/generator.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CompilerComponent,\n    LexerComponent,\n    ParserComponent,\n    TransformerComponent,\n    GeneratorComponent,\n  ],\n  imports: [\n    BrowserModule,\n    GoogleChartsModule,\n    OrganizationChartModule,\n    NoopAnimationsModule,\n    CodemirrorModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Ast, AstNode } from \"../models\";\nimport {\n  isAmpersand,\n  isColon,\n  isDelimiter,\n  isEqual,\n  isHash,\n  isQuery,\n  isSlash,\n} from \"./helpers\";\n\nexport function parser(tokens: AstNode[]) {\n  const root: Ast = {\n    type: \"url\",\n    body: [],\n  };\n  let isHostParsed = false;\n  let token;\n\n  while (tokens.length) {\n    token = tokens.shift();\n    if (token?.type === \"identifier\") {\n      if (\n        tokens[0] &&\n        isColon(tokens[0]) &&\n        isSlash(tokens[1]) &&\n        isSlash(tokens[2])\n      ) {\n        root.body.push({\n          type: \"Protocol\",\n          value: token.value,\n        });\n        continue;\n      }\n\n      if (!isHostParsed) {\n        let subDomain;\n        let domain;\n        const sections = token.value.split(\".\");\n        let tld = sections.pop();\n        if (tld?.length === 2 && sections[sections.length - 1] === \"co\") {\n          const tldParts = [sections.pop(), tld];\n          tld = tldParts.join(\".\");\n        }\n        domain = sections.pop();\n\n        if (sections.length) {\n          subDomain = sections.pop();\n        }\n\n        root.body.push({\n          type: \"Host\",\n          body: {\n            subDomain,\n            domain,\n            tld,\n          },\n        } as Ast);\n\n        isHostParsed = true;\n      } else {\n        root.body.push({\n          type: \"Path\",\n          value: token.value,\n        });\n      }\n      continue;\n    } else {\n      if (isQuery(token) || isAmpersand(token)) {\n        if (isEqual(tokens[1])) {\n          const symbol = token?.value;\n          const name = tokens?.shift()?.value;\n          const equal = tokens.shift();\n          const value = tokens?.shift()?.value;\n          root.body.push({\n            type: \"QueryParamater\",\n            body: {\n              name,\n              value,\n              symbol,\n            },\n          });\n        } else {\n          root.body.push({\n            type: \"QueryParamater\",\n            body: {\n              name: tokens?.shift()?.value,\n            },\n          });\n        }\n        continue;\n      }\n      if (isColon(token)) {\n        if (\n          !isDelimiter(tokens[0]) &&\n          Number.isInteger(parseInt(tokens[0].value, 10))\n        ) {\n          root.body.push({\n            type: \"Port\",\n            value: parseInt(tokens?.shift()?.value || \"\", 10),\n          });\n        }\n        continue;\n      }\n      if (isHash(token)) {\n        root.body.push({\n          type: \"Fragment\",\n          value: tokens?.shift()?.value,\n        });\n      }\n    }\n  }\n\n  return root;\n}\n","import { AMPERSAND, COLON, EQUAL, HASH, QUERY, SLASH } from \"./helpers\";\n\nconst delimiters = [COLON, SLASH, QUERY, EQUAL, AMPERSAND, HASH];\n\nexport function tokenizer(input: string): any {\n  const tokens = [];\n  let current = 0;\n\n  while (current < input.length) {\n    let char = input[current];\n    if (delimiters.indexOf(char) > -1) {\n      tokens.push({\n        type: \"delimiter\",\n        value: char,\n        position: {\n          start: current,\n          end: current,\n        },\n      });\n      current++;\n      continue;\n    } else {\n      let identifier = \"\";\n      let start = -1;\n      while (current < input.length && delimiters.indexOf(char) === -1) {\n        char = input[current];\n        start = start === -1 ? current : start;\n        if (delimiters.indexOf(char) > -1) {\n          continue;\n        }\n        identifier += char;\n        current++;\n      }\n      tokens.push({\n        type: \"identifier\",\n        value: identifier,\n        position: {\n          start,\n          end: current - 1,\n        },\n      });\n      continue;\n    }\n  }\n  return tokens;\n}\n","import { Ast, AstNode } from \"../models\";\nimport { COLON, EQUAL, HASH, SLASH } from \"./helpers\";\n\nexport function generator(ast: Ast) {\n  let modifiedUrl = \"\";\n  if (ast.type === \"url\") {\n    ast.body.forEach((node: AstNode) => {\n      switch (node.type) {\n        case \"Protocol\":\n          modifiedUrl += node.value + COLON + SLASH + SLASH;\n          break;\n        case \"Path\":\n          modifiedUrl += SLASH + node.value;\n          break;\n        case \"Port\":\n          modifiedUrl += COLON + node.value;\n          break;\n        case \"Fragment\":\n          modifiedUrl += HASH + node.value;\n          break;\n        case \"QueryParamater\":\n          if (node.body.value) {\n            modifiedUrl +=\n              node.body.symbol + node.body.name + EQUAL + node.body.value;\n          } else {\n            modifiedUrl += node.body.symbol + node.body.name;\n          }\n          break;\n        case \"Host\":\n          if (node.body.subDomain)\n            modifiedUrl += `${node.body.subDomain}.${node.body.domain}.${node.body.tld}`;\n          else modifiedUrl += `${node.body.domain}.${node.body.tld}`;\n          break;\n      }\n    });\n  }\n  return modifiedUrl;\n}\n","export default \"<p-organizationChart\\n  [value]=\\\"ast\\\"\\n  styleClass=\\\"company\\\"\\n  *ngIf=\\\"!showModified; else modifiedTmpl\\\"\\n>\\n  <ng-template let-node pTemplate=\\\"default\\\">\\n    <div class=\\\"ast-node\\\" [ngClass]=\\\"{ modified: node.modified }\\\" #astNode>\\n      <div *ngIf=\\\"!node.value\\\">\\n        <div class=\\\"ast-node__parent\\\">{{ node.label }}</div>\\n      </div>\\n      <div *ngIf=\\\"node.value\\\">\\n        <div class=\\\"ast-node__label\\\">{{ node.label }}</div>\\n        <div class=\\\"ast-node__value\\\">{{ node.value }}</div>\\n      </div>\\n    </div>\\n  </ng-template>\\n</p-organizationChart>\\n\\n<ng-template #modifiedTmpl>\\n  <p-organizationChart [value]=\\\"modifiedAst\\\" styleClass=\\\"company\\\">\\n    <ng-template let-node pTemplate=\\\"default\\\">\\n      <div class=\\\"ast-node\\\" [ngClass]=\\\"{ modified: node.modified }\\\">\\n        <div *ngIf=\\\"!node.value\\\">\\n          <div class=\\\"ast-node__parent\\\">{{ node.label }}</div>\\n        </div>\\n        <div *ngIf=\\\"node.value\\\">\\n          <div class=\\\"ast-node__label\\\">{{ node.label }}</div>\\n          <div class=\\\"ast-node__value\\\">{{ node.value }}</div>\\n        </div>\\n      </div>\\n    </ng-template>\\n  </p-organizationChart>\\n</ng-template>\\n\";","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChildren,\n  ViewEncapsulation,\n} from \"@angular/core\";\nimport { TimelineLite } from \"gsap\";\nimport { mapAstToChart } from \"src/app/helpers\";\n\n@Component({\n  selector: \"url-transformer\",\n  templateUrl: \"./transformer.component.html\",\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TransformerComponent implements OnInit, AfterViewInit {\n  @Input() ast!: any;\n  @Input() modifiedAst!: any;\n  @Input() visitor: any;\n\n  @Output() transform = new EventEmitter();\n  @ViewChildren(\"astNode\") astNodes!: QueryList<ElementRef>;\n  showModified = false;\n\n  ngOnInit() {\n    this.ast = [mapAstToChart(this.ast)];\n    this.modifiedAst = [mapAstToChart(this.modifiedAst)];\n  }\n\n  ngAfterViewInit() {\n    this.transformAst();\n  }\n\n  transformAst() {\n    const nodes: Element[] = this.astNodes?.map((btn) => btn.nativeElement);\n    const tl = new TimelineLite({\n      onComplete: () => {\n        this.showModified = true;\n      },\n    });\n\n    nodes.forEach((astNode) => {\n      tl.to(astNode, 0.1, {\n        boxShadow: \"0px 0px 5px 5px #EB9F86\",\n      }).to(astNode, 0.3, {\n        boxShadow: \"none\",\n      });\n    });\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}