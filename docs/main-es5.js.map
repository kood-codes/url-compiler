{"version":3,"sources":["webpack:///src/app/helpers/transformer.ts","webpack:///src/app/components/parser/parser.component.html","webpack:///src/app/components/lexer/lexer.component.ts","webpack:///src/app/components/parser/parser.component.ts","webpack:///src/app/components/lexer/lexer.component.html","webpack:///src/app/containers/compiler/compiler.component.html","webpack:///src/app/helpers/index.ts","webpack:///src/app/components/generator/generator.component.ts","webpack:///src/environments/environment.ts","webpack:///src/app/helpers/helpers.ts","webpack:///src/app/containers/compiler/compiler.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/components/generator/generator.component.html","webpack:///src/app/components/lexer/lexer.component.scss","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/helpers/parser.ts","webpack:///src/app/helpers/tokenizer.ts","webpack:///src/app/helpers/generator.ts","webpack:///src/app/components/transformer/transformer.component.html","webpack:///src/app/components/transformer/transformer.component.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["transformer","ast","visitor","type","body","map","node","visitorFunc","LexerComponent","vcRef","renderer","tokenArray","scannerPos","scannedTokens","url","tokens","document","querySelectorAll","scanner","querySelector","tl","forEach","token","rect","getBoundingClientRect","fromTo","left","opacity","width","cln","cloneNode","classList","add","to","appendChild","lexerElem","nativeElement","btnArr","btn","console","log","coord","x","staggerFromTo","y","index","target","currentX","tween","scan","selector","template","encapsulation","None","ParserComponent","cdRef","parse","nodes","astNodes","astNode","boxShadow","detectChanges","mapAstToChart","label","expanded","children","child","value","modified","arr","key","hasOwnProperty","push","GeneratorComponent","repeat","line","upper","lower","from","scaleX","transformOrigin","environment","production","COLON","SLASH","QUERY","EQUAL","AMPERSAND","HASH","isDelimiter","isSlash","isColon","isHash","isQuery","isAmpersand","isEqual","CompilerState","CompilerComponent","currentState","IDLE","startCompile","compileUrl","modifiedAst","visitorObj","eval","JSON","stringify","finalUrl","state","AppComponent","title","AppModule","declarations","imports","providers","bootstrap","parser","root","isHostParsed","length","shift","subDomain","domain","sections","split","tld","pop","tldParts","join","symbol","name","equal","Number","isInteger","parseInt","delimiters","tokenizer","input","current","char","indexOf","position","start","end","identifier","generator","modifiedUrl","TransformerComponent","transform","showModified","transformAst","onComplete","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Ast, AstNode } from \"../models\";\n\nexport function transformer(ast: Ast, visitor: any) {\n  if (ast.type === \"url\") {\n    ast.body = ast.body.map((node: AstNode) => {\n      const visitorFunc = visitor[node.type];\n      if (typeof visitorFunc === \"function\") {\n        return visitorFunc(node);\n      } else {\n        return node;\n      }\n    });\n  }\n  return ast;\n}\n","export default \"<p-organizationChart [value]=\\\"ast\\\" styleClass=\\\"company\\\">\\n  <ng-template let-node pTemplate=\\\"default\\\">\\n    <div class=\\\"ast-node\\\" [ngClass]=\\\"{ modified: node.modified }\\\" #astNode>\\n      <div *ngIf=\\\"!node.value\\\">\\n        <div class=\\\"ast-node__parent\\\">{{ node.label }}</div>\\n      </div>\\n      <div *ngIf=\\\"node.value\\\">\\n        <div class=\\\"ast-node__label\\\">{{ node.label }}</div>\\n        <div class=\\\"ast-node__value\\\">{{ node.value }}</div>\\n      </div>\\n    </div>\\n  </ng-template>\\n</p-organizationChart>\\n\";","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnInit,\n  QueryList,\n  Renderer2,\n  ViewChild,\n  ViewChildren,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from \"@angular/core\";\nimport { TimelineLite, TweenMax } from \"gsap\";\nimport { tokenizer } from \"../../helpers\";\n\n@Component({\n  selector: \"url-lexer\",\n  templateUrl: \"./lexer.component.html\",\n  styleUrls: [\"./lexer.component.scss\"],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class LexerComponent implements OnInit, AfterViewInit {\n  @Input() url!: string;\n  tokens: any;\n  tokenArray = [];\n  scannerPos = 0;\n  scannedTokens = [];\n  @ViewChild(\"lexer\", { static: false }) lexerElem!: ElementRef<any>;\n  @ViewChildren(\"tokenElem\") tokenElems!: QueryList<ElementRef>;\n\n  constructor(private vcRef: ViewContainerRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (this.url) {\n      this.tokens = tokenizer(this.url);\n    }\n  }\n\n  scan() {\n    const tokens: any = document.querySelectorAll(\".tokenText\");\n    const scanner: any = document.querySelector(\".scanner\");\n    const tl = new TimelineLite();\n\n    tokens.forEach((token: Element) => {\n      const rect = token.getBoundingClientRect();\n\n      tl.fromTo(\n        scanner,\n        0.1,\n        { left: this.scannerPos, opacity: 1 },\n        { left: this.scannerPos + rect.width }\n      );\n\n      this.scannerPos += rect.width;\n      const cln = <Element>token.cloneNode(true);\n      cln.classList.add(\"clone\");\n      tl.to(cln, 1, { opacity: 1 });\n      this.renderer.appendChild(this.lexerElem.nativeElement, cln);\n    });\n    tl.to(scanner, 0.1, { opacity: 0 });\n  }\n\n  tween(): void {\n    const btnArr: Element[] = this.tokenArray.map(\n      (btn: ElementRef<any>) => btn.nativeElement\n    );\n    console.log(btnArr);\n\n    const coord = this.lexerElem.nativeElement.getBoundingClientRect();\n    let x = 0;\n    TweenMax.staggerFromTo(\n      btnArr,\n      1,\n      {\n        x: coord.x,\n        y: -100,\n        opacity: 0,\n      },\n      {\n        y: 0,\n        x: (index: number, target: any) => {\n          const currentX = x;\n          x += target.getBoundingClientRect().width + 10;\n          return currentX;\n        },\n        opacity: 1,\n      },\n      0.2\n    );\n  }\n\n  ngAfterViewInit() {\n    // this.tokenArray = this.tokenElems.toArray();\n    this.tween();\n    this.scan();\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnInit,\n  QueryList,\n  ViewChildren,\n  ViewEncapsulation,\n} from \"@angular/core\";\nimport { TimelineLite } from \"gsap\";\nimport { mapAstToChart } from \"src/app/helpers\";\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: \"url-parser\",\n  templateUrl: \"./parser.component.html\",\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ParserComponent implements OnInit, AfterViewInit {\n  @Input() ast: any;\n  @Input() label!: string;\n  @ViewChildren(\"astNode\") astNodes!: QueryList<ElementRef>;\n\n  constructor(private cdRef: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    this.ast = [mapAstToChart(this.ast)];\n  }\n\n  ngAfterViewInit() {\n    this.parse();\n  }\n\n  parse() {\n    const nodes: any = document.querySelectorAll(\".p-organizationchart-table\");\n    const tl = new TimelineLite();\n\n    tl.staggerFromTo(\n      nodes,\n      1,\n      {\n        opacity: 0,\n      },\n      {\n        opacity: 1,\n      },\n      0.4\n    );\n  }\n\n  transform() {\n    const astNodes = document.querySelectorAll(\".ast-node\");\n    const tl = new TimelineLite();\n\n    astNodes.forEach((astNode) => {\n      tl.to(astNode, 0.1, {\n        boxShadow: \"0px 0px 16px 10px rgba(179,25,179,1)\",\n      }).to(astNode, 0.5, {\n        boxShadow: \"none\",\n      });\n    });\n    this.cdRef.detectChanges();\n  }\n}\n","export default \"<div class=\\\"url ml-3 d-flex justify-content-center\\\">\\n  <div class=\\\"position-relative\\\" #parent>\\n    <span\\n      class=\\\"tokenText {{ token.type }}\\\"\\n      *ngFor=\\\"let token of tokens; let i = index\\\"\\n    >\\n      {{ token.value }}\\n    </span>\\n    <div class=\\\"scanner\\\" #scanner></div>\\n  </div>\\n</div>\\n<h3 class=\\\"d-flex justify-content-center\\\">Tokens</h3>\\n<div class=\\\"lexer\\\" #lexer></div>\\n\";","export default \"<div class=\\\"page-title m-3\\\">SIMPLE://URL.COMPILER</div>\\n<div class=\\\"row m-3\\\">\\n  <div class=\\\"col-6\\\">\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"font-weight-bold text-uppercase\\\">Url</label>\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"url\\\" [(ngModel)]=\\\"url\\\" />\\n    </div>\\n    <div>\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"mx-2 btn btn-outline-primary\\\"\\n        (click)=\\\"setState(CompilerState.TOKENIZE)\\\"\\n      >\\n        Tokenize\\n      </button>\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"mx-2 btn btn-outline-success\\\"\\n        (click)=\\\"setState(CompilerState.PARSE)\\\"\\n      >\\n        Parse\\n      </button>\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"mx-2 btn btn-outline-danger\\\"\\n        (click)=\\\"setState(CompilerState.TRANSFORM)\\\"\\n      >\\n        Transform\\n      </button>\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"mx-2 btn btn-outline-secondary\\\"\\n        (click)=\\\"setState(CompilerState.GENERATE)\\\"\\n      >\\n        Generate\\n      </button>\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"mx-2 btn btn-outline-info\\\"\\n        (click)=\\\"setState(CompilerState.RESET)\\\"\\n      >\\n        Reset\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\\\"col-6\\\">\\n    <span class=\\\"font-weight-bold text-uppercase\\\">Visitor</span>\\n    <ngx-codemirror\\n      [(ngModel)]=\\\"visitor\\\"\\n      [options]=\\\"{\\n        lineNumbers: true,\\n        mode: 'javascript',\\n        theme: 'material'\\n      }\\\"\\n    ></ngx-codemirror>\\n  </div>\\n</div>\\n\\n<!-- <pre style=\\\"color:aliceblue\\\">{{modifiedAst | json}}</pre> -->\\n<ng-container [ngSwitch]=\\\"true\\\">\\n  <ng-container *ngSwitchCase=\\\"currentState === CompilerState.TOKENIZE\\\">\\n    <url-lexer [url]=\\\"url\\\"></url-lexer>\\n  </ng-container>\\n  <ng-container *ngSwitchCase=\\\"currentState === CompilerState.PARSE\\\">\\n    <url-parser [ast]=\\\"ast\\\" label=\\\"Parser\\\"></url-parser>\\n  </ng-container>\\n  <ng-container *ngSwitchCase=\\\"currentState === CompilerState.TRANSFORM\\\">\\n    <url-transformer\\n      [ast]=\\\"ast\\\"\\n      [modifiedAst]=\\\"modifiedAst\\\"\\n      [visitor]=\\\"visitorObj\\\"\\n      label=\\\"Transformer\\\"\\n      (transform)=\\\"onTransform($event)\\\"\\n    ></url-transformer>\\n  </ng-container>\\n  <ng-container *ngSwitchCase=\\\"currentState === CompilerState.GENERATE\\\">\\n    <url-generator [url]=\\\"finalUrl\\\"></url-generator>\\n  </ng-container>\\n</ng-container>\\n\";","import { AstNode, Chart } from \"../models\";\n\nexport { generator } from \"./generator\";\nexport { parser } from \"./parser\";\nexport { tokenizer } from \"./tokenizer\";\nexport { transformer } from \"./transformer\";\n\nexport function mapAstToChart(ast: AstNode): Chart {\n  const { type, body } = ast;\n  return {\n    label: type,\n    expanded: true,\n    children: body.map((child: AstNode) => {\n      if (!child?.body) {\n        return {\n          label: child.type,\n          value: child.value,\n          ...(child.modified ? { modified: true } : null),\n        };\n      }\n      const arr = [];\n      for (const key in child.body) {\n        if (child.body.hasOwnProperty(key) && key !== \"modified\") {\n          arr.push({\n            label: key,\n            value: child.body[key],\n            expanded: true,\n            ...(child.body.modified ? { modified: true } : null),\n          });\n        }\n      }\n      return {\n        label: child.type,\n        children: arr,\n        expanded: true,\n        ...(child.body.modified ? { modified: true } : null),\n      };\n    }),\n  };\n}\n","import { AfterViewInit, Component, Input } from \"@angular/core\";\nimport { TimelineMax } from \"gsap\";\n\n@Component({\n  selector: \"url-generator\",\n  templateUrl: \"./generator.component.html\",\n})\nexport class GeneratorComponent implements AfterViewInit {\n  @Input() url!: string;\n  constructor() {}\n\n  ngAfterViewInit() {\n    const tl = new TimelineMax({ repeat: 0 });\n    const line = <Element>document.querySelector(\".line\");\n    const upper = <Element>document.querySelector(\".upper\");\n    const lower = <Element>document.querySelector(\".lower\");\n    tl.from(line, 0.5, { scaleX: 0, transformOrigin: \"right center\" });\n    tl.from(upper, 0.75, { y: 40 }, \"text\");\n    tl.from(lower, 0.75, { y: -40 }, \"text\");\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { AstNode } from \"../models\";\n\nexport const COLON = \":\";\nexport const SLASH = \"/\";\nexport const QUERY = \"?\";\nexport const EQUAL = \"=\";\nexport const AMPERSAND = \"&\";\nexport const HASH = \"#\";\n\nexport function isDelimiter(token?: AstNode) {\n  return token?.type === \"delimiter\";\n}\n\nexport function isSlash(token?: AstNode) {\n  return isDelimiter(token) && token?.value === SLASH;\n}\n\nexport function isColon(token?: AstNode) {\n  return isDelimiter(token) && token?.value === COLON;\n}\n\nexport function isHash(token?: AstNode) {\n  return isDelimiter(token) && token?.value === HASH;\n}\n\nexport function isQuery(token?: AstNode) {\n  return isDelimiter(token) && token?.value === QUERY;\n}\n\nexport function isAmpersand(token?: AstNode) {\n  return isDelimiter(token) && token?.value === AMPERSAND;\n}\n\nexport function isEqual(token?: AstNode) {\n  return isDelimiter(token) && token?.value === EQUAL;\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Ast, AstNode } from \"src/app/models\";\nimport { generator, parser, tokenizer, transformer } from \"../../helpers\";\n\nexport enum CompilerState {\n  IDLE = \"IDLE\",\n  TOKENIZE = \"TOKENIZE\",\n  PARSE = \"PARSE\",\n  TRANSFORM = \"TRANSFORM\",\n  GENERATE = \"GENERATE\",\n  RESET = \"RESET\",\n}\n\n@Component({\n  selector: \"url-compiler\",\n  templateUrl: \"./compiler.component.html\",\n})\nexport class CompilerComponent implements OnInit {\n  url = \"https://video.google.in:80/videoplay?lang=en#00h02m30s\";\n  CompilerState = CompilerState;\n  currentState = CompilerState.IDLE;\n  tokens!: AstNode[];\n  startCompile = false;\n  ast!: Ast;\n  modifiedAst!: Ast;\n  visitorObj: any;\n  finalUrl!: string;\n  visitor = `{\n  QueryParamater(node) {\n    if ((node.body.name === \"lang\") && (node.body.value === \"en\")) {\n      node.body.value = \"NL\";\n      node.body.modified = true;\n    }\n    return node;\n  }\n}`;\n\n  ngOnInit() {\n    this.compileUrl();\n  }\n\n  onTransform(modifiedAst: any) {\n    this.ast = modifiedAst;\n  }\n\n  compileUrl() {\n    this.tokens = tokenizer(this.url);\n    this.ast = parser(this.tokens);\n    // tslint:disable-next-line:prefer-const\n    let visitorObj;\n    // tslint:disable-next-line:no-eval\n    eval(`visitorObj = ${this.visitor}`); // Using eval on purpose\n    this.visitorObj = visitorObj;\n    this.modifiedAst = JSON.parse(JSON.stringify(this.ast));\n    this.modifiedAst = transformer(this.modifiedAst, this.visitorObj);\n    this.finalUrl = generator(this.modifiedAst);\n  }\n\n  setState(state: CompilerState) {\n    this.compileUrl();\n    this.currentState = state;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/mode/markdown/markdown\";\n\n@Component({\n  selector: \"url-root\",\n  templateUrl: \"./app.component.html\",\n})\nexport class AppComponent {\n  title = \"url-compiler\";\n}\n","export default \"<div class=\\\"final-url\\\">\\n  <div class=\\\"upperWrap\\\">\\n    <div class=\\\"upper\\\">The modified url is</div>\\n  </div>\\n  <div class=\\\"line\\\"></div>\\n  <div class=\\\"lowerWrap\\\">\\n    <div class=\\\"lower\\\">{{ url }}</div>\\n  </div>\\n</div>\\n\";","export default \".lexer,\\n.parser {\\n  min-width: 100px;\\n  max-width: 250px;\\n  min-height: 250px;\\n  border: 2px dashed var(--lexer-bg-color);\\n  margin: auto;\\n  justify-content: center;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  margin-bottom: 50px;\\n}\\n\\n.animate {\\n  transform: translate(calc(50vw - 50px), -50px);\\n  top: 20px;\\n}\\n\\n.token-container {\\n  display: flex;\\n  height: 60px;\\n}\\n\\n.token-container .token {\\n  border-radius: 10px;\\n  padding: 5px 10px;\\n  margin: 5px;\\n  position: absolute;\\n  text-align: center;\\n}\\n\\n.tokenText {\\n  position: relative;\\n  white-space: nowrap;\\n  font-size: 2.5rem;\\n}\\n\\n.scanner {\\n  display: inline-block;\\n  border: 5px dotted var(--lexer-bg-color);\\n  height: 3.75rem;\\n  width: 1.85rem;\\n  position: absolute;\\n  left: 0px;\\n  margin-left: -5px;\\n}\\n\\n.url {\\n  position: relative;\\n}\\n\\n.clone {\\n  display: block;\\n  width: 100%;\\n  border-bottom: 2px dashed var(--lexer-bg-color);\\n  padding: 8px;\\n  text-align: center;\\n  font-size: 16px;\\n  opacity: 0;\\n  font-weight: bold;\\n}\\n\\n.tokenText.identifier.clone::before {\\n  content: \\\"I\\\";\\n  position: absolute;\\n  left: -12px;\\n}\\n\\n.tokenText.delimiter.clone::before {\\n  content: \\\"D\\\";\\n  position: absolute;\\n  left: -15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xleGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUVFLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLHdDQUFBO0VBQ0EsWUFBQTtFQUNBLHVCQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7RUFDQSxtQkFBQTtBQUNGOztBQUVBO0VBQ0UsOENBQUE7RUFDQSxTQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0VBQ0EsWUFBQTtBQUNGOztBQUNFO0VBQ0UsbUJBQUE7RUFDQSxpQkFBQTtFQUNBLFdBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0FBQ0o7O0FBR0E7RUFDRSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0EsaUJBQUE7QUFBRjs7QUFHQTtFQUNFLHFCQUFBO0VBQ0Esd0NBQUE7RUFDQSxlQUFBO0VBQ0EsY0FBQTtFQUNBLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLGlCQUFBO0FBQUY7O0FBR0E7RUFDRSxrQkFBQTtBQUFGOztBQUdBO0VBQ0UsY0FBQTtFQUNBLFdBQUE7RUFDQSwrQ0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxVQUFBO0VBQ0EsaUJBQUE7QUFBRjs7QUFHQTtFQUNFLFlBQUE7RUFDQSxrQkFBQTtFQUNBLFdBQUE7QUFBRjs7QUFHQTtFQUNFLFlBQUE7RUFDQSxrQkFBQTtFQUNBLFdBQUE7QUFBRiIsImZpbGUiOiJsZXhlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5sZXhlcixcbi5wYXJzZXIge1xuICBtaW4td2lkdGg6IDEwMHB4O1xuICBtYXgtd2lkdGg6IDI1MHB4O1xuICBtaW4taGVpZ2h0OiAyNTBweDtcbiAgYm9yZGVyOiAycHggZGFzaGVkIHZhcigtLWxleGVyLWJnLWNvbG9yKTtcbiAgbWFyZ2luOiBhdXRvO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTogNTBweDtcbn1cblxuLmFuaW1hdGUge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZShjYWxjKDUwdncgLSA1MHB4KSwgLTUwcHgpO1xuICB0b3A6IDIwcHg7XG59XG5cbi50b2tlbi1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBoZWlnaHQ6IDYwcHg7XG5cbiAgLnRva2VuIHtcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgIHBhZGRpbmc6IDVweCAxMHB4O1xuICAgIG1hcmdpbjogNXB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbn1cblxuLnRva2VuVGV4dCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgZm9udC1zaXplOiAyLjVyZW07XG59XG5cbi5zY2FubmVyIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBib3JkZXI6IDVweCBkb3R0ZWQgdmFyKC0tbGV4ZXItYmctY29sb3IpO1xuICBoZWlnaHQ6IDMuNzVyZW07XG4gIHdpZHRoOiAxLjg1cmVtO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDBweDtcbiAgbWFyZ2luLWxlZnQ6IC01cHg7XG59XG5cbi51cmwge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5jbG9uZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyLWJvdHRvbTogMnB4IGRhc2hlZCB2YXIoLS1sZXhlci1iZy1jb2xvcik7XG4gIHBhZGRpbmc6IDhweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDE2cHg7XG4gIG9wYWNpdHk6IDA7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4udG9rZW5UZXh0LmlkZW50aWZpZXIuY2xvbmU6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiSVwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IC0xMnB4O1xufVxuXG4udG9rZW5UZXh0LmRlbGltaXRlci5jbG9uZTo6YmVmb3JlIHtcbiAgY29udGVudDogXCJEXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogLTE1cHg7XG59XG4iXX0= */\";","export default \"<url-compiler></url-compiler>\\n\";","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NoopAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { NgModule } from \"@angular/core\";\nimport { GoogleChartsModule } from \"angular-google-charts\";\nimport { OrganizationChartModule } from \"primeng/organizationchart\";\nimport { CodemirrorModule } from \"@ctrl/ngx-codemirror\";\n\nimport { AppComponent } from \"./app.component\";\nimport { CompilerComponent } from \"./containers/compiler/compiler.component\";\nimport { LexerComponent } from \"./components/lexer/lexer.component\";\nimport { ParserComponent } from \"./components/parser/parser.component\";\nimport { FormsModule } from \"@angular/forms\";\nimport { TransformerComponent } from \"./components/transformer/transformer.component\";\nimport { GeneratorComponent } from \"./components/generator/generator.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CompilerComponent,\n    LexerComponent,\n    ParserComponent,\n    TransformerComponent,\n    GeneratorComponent,\n  ],\n  imports: [\n    BrowserModule,\n    GoogleChartsModule,\n    OrganizationChartModule,\n    NoopAnimationsModule,\n    CodemirrorModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Ast, AstNode } from \"../models\";\nimport {\n  isAmpersand,\n  isColon,\n  isDelimiter,\n  isEqual,\n  isHash,\n  isQuery,\n  isSlash,\n} from \"./helpers\";\n\nexport function parser(tokens: AstNode[]) {\n  const root: Ast = {\n    type: \"url\",\n    body: [],\n  };\n  let isHostParsed = false;\n  let token;\n\n  while (tokens.length) {\n    token = tokens.shift();\n    if (token?.type === \"identifier\") {\n      if (\n        tokens[0] &&\n        isColon(tokens[0]) &&\n        isSlash(tokens[1]) &&\n        isSlash(tokens[2])\n      ) {\n        root.body.push({\n          type: \"Protocol\",\n          value: token.value,\n        });\n        continue;\n      }\n\n      if (!isHostParsed) {\n        let subDomain;\n        let domain;\n        const sections = token.value.split(\".\");\n        let tld = sections.pop();\n        if (tld?.length === 2 && sections[sections.length - 1] === \"co\") {\n          const tldParts = [sections.pop(), tld];\n          tld = tldParts.join(\".\");\n        }\n        domain = sections.pop();\n\n        if (sections.length) {\n          subDomain = sections.pop();\n        }\n\n        root.body.push({\n          type: \"Host\",\n          body: {\n            subDomain,\n            domain,\n            tld,\n          },\n        } as Ast);\n\n        isHostParsed = true;\n      } else {\n        root.body.push({\n          type: \"Path\",\n          value: token.value,\n        });\n      }\n      continue;\n    } else {\n      if (isQuery(token) || isAmpersand(token)) {\n        if (isEqual(tokens[1])) {\n          const symbol = token?.value;\n          const name = tokens?.shift()?.value;\n          const equal = tokens.shift();\n          const value = tokens?.shift()?.value;\n          root.body.push({\n            type: \"QueryParamater\",\n            body: {\n              name,\n              value,\n              symbol,\n            },\n          });\n        } else {\n          root.body.push({\n            type: \"QueryParamater\",\n            body: {\n              name: tokens?.shift()?.value,\n            },\n          });\n        }\n        continue;\n      }\n      if (isColon(token)) {\n        if (\n          !isDelimiter(tokens[0]) &&\n          Number.isInteger(parseInt(tokens[0].value, 10))\n        ) {\n          root.body.push({\n            type: \"Port\",\n            value: parseInt(tokens?.shift()?.value || \"\", 10),\n          });\n        }\n        continue;\n      }\n      if (isHash(token)) {\n        root.body.push({\n          type: \"Fragment\",\n          value: tokens?.shift()?.value,\n        });\n      }\n    }\n  }\n\n  return root;\n}\n","import { AMPERSAND, COLON, EQUAL, HASH, QUERY, SLASH } from \"./helpers\";\n\nconst delimiters = [COLON, SLASH, QUERY, EQUAL, AMPERSAND, HASH];\n\nexport function tokenizer(input: string): any {\n  const tokens = [];\n  let current = 0;\n\n  while (current < input.length) {\n    let char = input[current];\n    if (delimiters.indexOf(char) > -1) {\n      tokens.push({\n        type: \"delimiter\",\n        value: char,\n        position: {\n          start: current,\n          end: current,\n        },\n      });\n      current++;\n      continue;\n    } else {\n      let identifier = \"\";\n      let start = -1;\n      while (current < input.length && delimiters.indexOf(char) === -1) {\n        char = input[current];\n        start = start === -1 ? current : start;\n        if (delimiters.indexOf(char) > -1) {\n          continue;\n        }\n        identifier += char;\n        current++;\n      }\n      tokens.push({\n        type: \"identifier\",\n        value: identifier,\n        position: {\n          start,\n          end: current - 1,\n        },\n      });\n      continue;\n    }\n  }\n  return tokens;\n}\n","import { Ast, AstNode } from \"../models\";\nimport { COLON, EQUAL, HASH, SLASH } from \"./helpers\";\n\nexport function generator(ast: Ast) {\n  let modifiedUrl = \"\";\n  if (ast.type === \"url\") {\n    ast.body.forEach((node: AstNode) => {\n      switch (node.type) {\n        case \"Protocol\":\n          modifiedUrl += node.value + COLON + SLASH + SLASH;\n          break;\n        case \"Path\":\n          modifiedUrl += SLASH + node.value;\n          break;\n        case \"Port\":\n          modifiedUrl += COLON + node.value;\n          break;\n        case \"Fragment\":\n          modifiedUrl += HASH + node.value;\n          break;\n        case \"QueryParamater\":\n          if (node.body.value) {\n            modifiedUrl +=\n              node.body.symbol + node.body.name + EQUAL + node.body.value;\n          } else {\n            modifiedUrl += node.body.symbol + node.body.name;\n          }\n          break;\n        case \"Host\":\n          if (node.body.subDomain)\n            modifiedUrl += `${node.body.subDomain}.${node.body.domain}.${node.body.tld}`;\n          else modifiedUrl += `${node.body.domain}.${node.body.tld}`;\n          break;\n      }\n    });\n  }\n  return modifiedUrl;\n}\n","export default \"<p-organizationChart\\n  [value]=\\\"ast\\\"\\n  styleClass=\\\"company\\\"\\n  *ngIf=\\\"!showModified; else modifiedTmpl\\\"\\n>\\n  <ng-template let-node pTemplate=\\\"default\\\">\\n    <div class=\\\"ast-node\\\" [ngClass]=\\\"{ modified: node.modified }\\\" #astNode>\\n      <div *ngIf=\\\"!node.value\\\">\\n        <div class=\\\"ast-node__parent\\\">{{ node.label }}</div>\\n      </div>\\n      <div *ngIf=\\\"node.value\\\">\\n        <div class=\\\"ast-node__label\\\">{{ node.label }}</div>\\n        <div class=\\\"ast-node__value\\\">{{ node.value }}</div>\\n      </div>\\n    </div>\\n  </ng-template>\\n</p-organizationChart>\\n\\n<ng-template #modifiedTmpl>\\n  <p-organizationChart [value]=\\\"modifiedAst\\\" styleClass=\\\"company\\\">\\n    <ng-template let-node pTemplate=\\\"default\\\">\\n      <div class=\\\"ast-node\\\" [ngClass]=\\\"{ modified: node.modified }\\\">\\n        <div *ngIf=\\\"!node.value\\\">\\n          <div class=\\\"ast-node__parent\\\">{{ node.label }}</div>\\n        </div>\\n        <div *ngIf=\\\"node.value\\\">\\n          <div class=\\\"ast-node__label\\\">{{ node.label }}</div>\\n          <div class=\\\"ast-node__value\\\">{{ node.value }}</div>\\n        </div>\\n      </div>\\n    </ng-template>\\n  </p-organizationChart>\\n</ng-template>\\n\";","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChildren,\n  ViewEncapsulation,\n} from \"@angular/core\";\nimport { TimelineLite } from \"gsap\";\nimport { mapAstToChart } from \"src/app/helpers\";\n\n@Component({\n  selector: \"url-transformer\",\n  templateUrl: \"./transformer.component.html\",\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TransformerComponent implements OnInit, AfterViewInit {\n  @Input() ast!: any;\n  @Input() modifiedAst!: any;\n  @Input() visitor: any;\n\n  @Output() transform = new EventEmitter();\n  @ViewChildren(\"astNode\") astNodes!: QueryList<ElementRef>;\n  showModified = false;\n\n  ngOnInit() {\n    this.ast = [mapAstToChart(this.ast)];\n    this.modifiedAst = [mapAstToChart(this.modifiedAst)];\n  }\n\n  ngAfterViewInit() {\n    this.transformAst();\n  }\n\n  transformAst() {\n    const nodes: Element[] = this.astNodes?.map((btn) => btn.nativeElement);\n    const tl = new TimelineLite({\n      onComplete: () => {\n        this.showModified = true;\n      },\n    });\n\n    nodes.forEach((astNode) => {\n      tl.to(astNode, 0.1, {\n        boxShadow: \"0px 0px 5px 5px #EB9F86\",\n      }).to(astNode, 0.3, {\n        boxShadow: \"none\",\n      });\n    });\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}